{
	"info": {
		"_postman_id": "df4a3a9a-9ba6-45ec-8bf7-6da1c4e77532",
		"name": "casting-agency",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25899275"
	},
	"item": [
		{
			"name": "public",
			"item": [
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"// pm.test(\"value contains movies array\", function () {",
									"//     var jsonData = pm.response.json();",
									"//     pm.expect(jsonData.movies).to.be.an('array')",
									"// });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies?searchTerm=search_term",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"// pm.test(\"value contains movies array\", function () {",
									"//     var jsonData = pm.response.json();",
									"//     pm.expect(jsonData.movies).to.be.an('array')",
									"// });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"searchTerm\": \"Dune\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies?searchTerm=Dune",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							],
							"query": [
								{
									"key": "searchTerm",
									"value": "Dune"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"// pm.test(\"value contains movie object\", function () {",
									"//     var jsonData = pm.response.json();",
									"//     pm.expect(jsonData.movie).to.be.an('object')",
									"// });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/11",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"11"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"// pm.test(\"value contains actors array\", function () {",
									"//     var jsonData = pm.response.json();",
									"//     pm.expect(jsonData.actors).to.be.an('array')",
									"// });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors?searchTerm=search_term",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"// pm.test(\"value contains actors array\", function () {",
									"//     var jsonData = pm.response.json();",
									"//     pm.expect(jsonData.actors).to.be.an('array')",
									"// });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"searchTerm\": \"Ben\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors?searchTerm=Jeff",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							],
							"query": [
								{
									"key": "searchTerm",
									"value": "Jeff"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"// pm.test(\"value contains actor object\", function () {",
									"//     var jsonData = pm.response.json();",
									"//     pm.expect(jsonData.actor).to.be.an('object')",
									"// });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/11",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"11"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Cilian Murphy\",\n    \"city\": \"Hue\",\n    \"state\": \"Vietnam\",\n    \"phone\": \"0934243\",\n    \"facebook_link\": \"https://facebook.com/\",\n    \"image_link\": \"https://google.com/\",\n    \"website\": \"https://google.com/\",\n    \"seeking_movie\": true,\n    \"seeking_description\": \"na\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/castings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/castings",
							"host": [
								"{{host}}"
							],
							"path": [
								"castings"
							]
						}
					},
					"response": []
				},
				{
					"name": "/castings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/castings",
							"host": [
								"{{host}}"
							],
							"path": [
								"castings"
							]
						}
					},
					"response": []
				},
				{
					"name": "/castings/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/castings/11",
							"host": [
								"{{host}}"
							],
							"path": [
								"castings",
								"11"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "casting assistant",
			"item": [
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movies array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies?searchTerm=search_term",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movies array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"searchTerm\": \"Dune\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies?searchTerm=Dune",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							],
							"query": [
								{
									"key": "searchTerm",
									"value": "Dune"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movie object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movie).to.be.an('object')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/11",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"11"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actor object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actor).to.be.an('object')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors?searchTerm=search_term",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"searchTerm\": \"Jeff\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors?searchTerm=Jeff",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							],
							"query": [
								{
									"key": "searchTerm",
									"value": "Jeff"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Cilian Murphy\",\n    \"city\": \"Hue\",\n    \"state\": \"Vietnam\",\n    \"phone\": \"0934243\",\n    \"facebook_link\": \"https://facebook.com/\",\n    \"image_link\": \"https://google.com/\",\n    \"website\": \"https://google.com/\",\n    \"seeking_movie\": true,\n    \"seeking_description\": \"na\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/11",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"11"
							]
						}
					},
					"response": []
				},
				{
					"name": "/castings/",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains casting array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.castings).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/castings",
							"host": [
								"{{host}}"
							],
							"path": [
								"castings"
							]
						}
					},
					"response": []
				},
				{
					"name": "/castings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains casting object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.casting).to.be.an('object')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "actor_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "movie_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "start_time",
									"value": "2014-12-11 23:30:34",
									"type": "text"
								},
								{
									"key": "place",
									"value": "22th Wall Street",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/castings",
							"host": [
								"{{host}}"
							],
							"path": [
								"castings"
							]
						}
					},
					"response": []
				},
				{
					"name": "/castings/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/castings/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"castings",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImhSd0R4YTRiTktIQ2E4NF9MVTBnLSJ9.eyJpc3MiOiJodHRwczovL2ZzbmQtc3R1LnVzLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw2NDNjZjhhZGI3YWRkMTVhODliNTU3ZmQiLCJhdWQiOiJjYXN0aW5nLWFnZW5jeSIsImlhdCI6MTY4Nzg5NjQ1MiwiZXhwIjoxNjg3OTgyODUyLCJhenAiOiIyTnFMTGYwbzBESnJoZ1lVT2hiU1dIdHRHV1BhTTdnSSIsInNjb3BlIjoiIiwicGVybWlzc2lvbnMiOlsiYWRkOmNhc3RpbmdzIiwiZGVsZXRlOmNhc3RpbmdzIiwiZ2V0OmFjdG9ycyIsImdldDpjYXN0aW5ncyIsImdldDptb3ZpZXMiXX0.HAnkCN1ED1DFL8fVH_Tzeu8hudaqV18QQ-6P91JRD8hMnZxDgYeZQdsrG_WwR1P9BlDmKCeiY3BcSqA2D-WpU7V-CUZPNmCZx6acDoqGJWkjk45UsjMvyG3YcShIv9YaCp_tBQp-2w5uXb6_7J17p97hFiGbKm8jM8Pm4l6fiVBDyTEyQVyNF9ThKTs8owPtqw1TmXbgdwR4y8aaQ4HwrAWGkWVx74oNTCrF7Me43I8JrqtB4jABDj8pVET-RWz-qU5PzbsYnbhQniTZqmRchutGpuycFS0a8l9xCzM2gOGmQDYTpplZAqJgSg5uIEQvzo29kcA4a0Rpx75LgqIAKg",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "casting director",
			"item": [
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movies array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies?searchTerm=search_term",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movies array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"searchTerm\": \"Dune\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies?searchTerm=Dune",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							],
							"query": [
								{
									"key": "searchTerm",
									"value": "Dune"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movie object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movie).to.be.an('object')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movie array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movie).to.be.an('object')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "director",
									"value": "Seymour Huikerby",
									"type": "text"
								},
								{
									"key": "facebook_link",
									"value": "http://google.com",
									"type": "text"
								},
								{
									"key": "genres",
									"value": "Adventure",
									"type": "text"
								},
								{
									"key": "genres",
									"value": "Sci-Fi",
									"type": "text"
								},
								{
									"key": "image_link",
									"value": "http://google.com",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Dune",
									"type": "text"
								},
								{
									"key": "phone",
									"value": "123412343",
									"type": "text"
								},
								{
									"key": "producer",
									"value": "Dach-Streich",
									"type": "text"
								},
								{
									"key": "seeking_actor",
									"value": "true",
									"type": "text"
								},
								{
									"key": "seeking_description",
									"value": "Finding actors for Dune movie",
									"type": "text"
								},
								{
									"key": "website",
									"value": "http://dune.com",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "director",
									"value": "Seymour Huikerby",
									"type": "text"
								},
								{
									"key": "facebook_link",
									"value": "http://google.com",
									"type": "text"
								},
								{
									"key": "genres",
									"value": "Adventure|Sci-Fi",
									"type": "text"
								},
								{
									"key": "image_link",
									"value": "http://google.com",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Dune",
									"type": "text"
								},
								{
									"key": "phone",
									"value": "123412343",
									"type": "text"
								},
								{
									"key": "producer",
									"value": "Dach-Streich",
									"type": "text"
								},
								{
									"key": "seeking_actor",
									"value": "true",
									"type": "text"
								},
								{
									"key": "seeking_description",
									"value": "Finding actors for Dune movie",
									"type": "text"
								},
								{
									"key": "website",
									"value": "http://dune.com",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/11",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"11"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors?searchTerm=search_term",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"searchTerm\": \"Jeff\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors?searchTerm=Jeff",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							],
							"query": [
								{
									"key": "searchTerm",
									"value": "Jeff"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actor object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actor).to.be.an('object')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actor object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actor).to.be.an('object')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "43",
									"type": "text"
								},
								{
									"key": "city",
									"value": "Norman",
									"type": "text"
								},
								{
									"key": "genres",
									"value": "Comedy",
									"type": "text"
								},
								{
									"key": "genres",
									"value": "Drama",
									"type": "text"
								},
								{
									"key": "image_link",
									"value": "http://google.com",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Arabela Lebbern",
									"type": "text"
								},
								{
									"key": "phone",
									"value": "4056375359",
									"type": "text"
								},
								{
									"key": "seeking_description",
									"value": "I want a movie",
									"type": "text"
								},
								{
									"key": "seeking_movie",
									"value": "true",
									"type": "text"
								},
								{
									"key": "sex",
									"value": "Male",
									"type": "text"
								},
								{
									"key": "state",
									"value": "AL",
									"type": "text"
								},
								{
									"key": "website",
									"value": "http://google.com",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actor object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actor).to.be.an('object')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "43",
									"type": "text"
								},
								{
									"key": "city",
									"value": "Norman",
									"type": "text"
								},
								{
									"key": "genres",
									"value": "Comedy",
									"type": "text"
								},
								{
									"key": "genres",
									"value": "Drama",
									"type": "text"
								},
								{
									"key": "genres",
									"value": "Romance",
									"type": "text"
								},
								{
									"key": "genres",
									"value": "War",
									"type": "text"
								},
								{
									"key": "image_link",
									"value": "http://google.com",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Arabela Lebbern",
									"type": "text"
								},
								{
									"key": "phone",
									"value": "4056375359",
									"type": "text"
								},
								{
									"key": "seeking_description",
									"value": "I want a movie",
									"type": "text"
								},
								{
									"key": "seeking_movie",
									"value": "true",
									"type": "text"
								},
								{
									"key": "sex",
									"value": "Male",
									"type": "text"
								},
								{
									"key": "state",
									"value": "AL",
									"type": "text"
								},
								{
									"key": "website",
									"value": "http://google.com",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/11",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"11"
							]
						}
					},
					"response": []
				},
				{
					"name": "/castings/",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains castings array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.castings).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/castings",
							"host": [
								"{{host}}"
							],
							"path": [
								"castings"
							]
						}
					},
					"response": []
				},
				{
					"name": "/castings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains casting object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.casting).to.be.an('object')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "actor_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "movie_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "start_time",
									"value": "2014-12-11 23:30:34",
									"type": "text"
								},
								{
									"key": "place",
									"value": "23rd Lincon street",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/castings",
							"host": [
								"{{host}}"
							],
							"path": [
								"castings"
							]
						}
					},
					"response": []
				},
				{
					"name": "/castings/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/castings/11",
							"host": [
								"{{host}}"
							],
							"path": [
								"castings",
								"11"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImhSd0R4YTRiTktIQ2E4NF9MVTBnLSJ9.eyJpc3MiOiJodHRwczovL2ZzbmQtc3R1LnVzLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw2NDNjZjg4OTQ1MDk0ZmI2ODFmN2ExY2QiLCJhdWQiOiJjYXN0aW5nLWFnZW5jeSIsImlhdCI6MTY4Nzg5NjQyMSwiZXhwIjoxNjg3OTgyODIxLCJhenAiOiIyTnFMTGYwbzBESnJoZ1lVT2hiU1dIdHRHV1BhTTdnSSIsInNjb3BlIjoiIiwicGVybWlzc2lvbnMiOlsiYWRkOmFjdG9ycyIsImFkZDpjYXN0aW5ncyIsImRlbGV0ZTphY3RvcnMiLCJkZWxldGU6Y2FzdGluZ3MiLCJnZXQ6YWN0b3JzIiwiZ2V0OmNhc3RpbmdzIiwiZ2V0Om1vdmllcyIsInVwZGF0ZTphY3RvcnMiLCJ1cGRhdGU6Y2FzdGluZyIsInVwZGF0ZTptb3ZpZXMiXX0.b7vsn8bHlwcULbWtNk6xviXnScI5yfpM_Mt0PkFrviEj7U-c_CqPJrPpQSG9CxLU1yJGJF4GYDXW5a_gxDGm_CizWFcdDgKzRZrhJhPqyRmTQeqtsPqSjqlknYOHbbuizjDambOcqSLnpyASecIFS1pXulGBnWJiGn28TaMHVayx3h_6C8fjcrhn2346ro0Ou_C2b_-X4aQdvOUjvuMf0RSnEdwXle7k0rfPOYvXcVebqMYjo3oQartIVyR05e5S1ieNxg3SRyjxkc2JDFnocMHKQPcK1dkhcNTwG5Nj-22xmLMCxlYhqpb_VGtSDPKsm3HX76O8YQ4IMXz6q3GBEQ",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "executive producer",
			"item": [
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movies array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies?searchTerm=search_term",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movies array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"searchTerm\": \"Dune\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies?searchTerm=Dune",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							],
							"query": [
								{
									"key": "searchTerm",
									"value": "Dune"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movie object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movie).to.be.an('object')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movie array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movie).to.be.an('object')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "director",
									"value": "Seymour Huikerby",
									"type": "text"
								},
								{
									"key": "facebook_link",
									"value": "http://google.com",
									"type": "text"
								},
								{
									"key": "genres",
									"value": "Adventure",
									"type": "text"
								},
								{
									"key": "genres",
									"value": "Sci-Fi",
									"type": "text"
								},
								{
									"key": "image_link",
									"value": "http://google.com",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Dune",
									"type": "text"
								},
								{
									"key": "phone",
									"value": "123412343",
									"type": "text"
								},
								{
									"key": "producer",
									"value": "Dach-Streich",
									"type": "text"
								},
								{
									"key": "seeking_actor",
									"value": "true",
									"type": "text"
								},
								{
									"key": "seeking_description",
									"value": "Finding actors for Dune movie",
									"type": "text"
								},
								{
									"key": "website",
									"value": "http://dune.com",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains movie object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movie).to.be.an('object')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "director",
									"value": "Seymour Huikerby",
									"type": "text"
								},
								{
									"key": "facebook_link",
									"value": "http://google.com",
									"type": "text"
								},
								{
									"key": "genres",
									"value": "Adventure",
									"type": "text"
								},
								{
									"key": "genres",
									"value": "Sci-Fi",
									"type": "text"
								},
								{
									"key": "image_link",
									"value": "http://google.com",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Dune",
									"type": "text"
								},
								{
									"key": "phone",
									"value": "123412343",
									"type": "text"
								},
								{
									"key": "producer",
									"value": "Dach-Streich",
									"type": "text"
								},
								{
									"key": "seeking_actor",
									"value": "true",
									"type": "text"
								},
								{
									"key": "seeking_description",
									"value": "Finding actors for Dune movie",
									"type": "text"
								},
								{
									"key": "website",
									"value": "http://dune.com",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/11",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"11"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors?searchTerm=search_term",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"searchTerm\": \"Jeff\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors?searchTerm=Jeff",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							],
							"query": [
								{
									"key": "searchTerm",
									"value": "Jeff"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actor object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actor).to.be.an('object')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actor object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actor).to.be.an('object')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "43",
									"type": "text"
								},
								{
									"key": "city",
									"value": "Norman",
									"type": "text"
								},
								{
									"key": "genres",
									"value": "Comedy",
									"type": "text"
								},
								{
									"key": "genres",
									"value": "Drama",
									"type": "text"
								},
								{
									"key": "image_link",
									"value": "http://google.com",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Arabela Lebbern",
									"type": "text"
								},
								{
									"key": "phone",
									"value": "4056375359",
									"type": "text"
								},
								{
									"key": "seeking_description",
									"value": "I want a movie",
									"type": "text"
								},
								{
									"key": "seeking_movie",
									"value": "true",
									"type": "text"
								},
								{
									"key": "sex",
									"value": "Male",
									"type": "text"
								},
								{
									"key": "state",
									"value": "AL",
									"type": "text"
								},
								{
									"key": "website",
									"value": "http://google.com",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains actor object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actor).to.be.an('object')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "43",
									"type": "text"
								},
								{
									"key": "city",
									"value": "Norman",
									"type": "text"
								},
								{
									"key": "genres",
									"value": "Comedy",
									"type": "text"
								},
								{
									"key": "genres",
									"value": "Drama",
									"type": "text"
								},
								{
									"key": "genres",
									"value": "Romance",
									"type": "text"
								},
								{
									"key": "genres",
									"value": "War",
									"type": "text"
								},
								{
									"key": "image_link",
									"value": "http://google.com",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Arabela Lebbern",
									"type": "text"
								},
								{
									"key": "phone",
									"value": "4056375359",
									"type": "text"
								},
								{
									"key": "seeking_description",
									"value": "I want a movie",
									"type": "text"
								},
								{
									"key": "seeking_movie",
									"value": "true",
									"type": "text"
								},
								{
									"key": "sex",
									"value": "Male",
									"type": "text"
								},
								{
									"key": "state",
									"value": "AL",
									"type": "text"
								},
								{
									"key": "website",
									"value": "http://google.com",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/11",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"11"
							]
						}
					},
					"response": []
				},
				{
					"name": "/castings/",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains castings array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.castings).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/castings",
							"host": [
								"{{host}}"
							],
							"path": [
								"castings"
							]
						}
					},
					"response": []
				},
				{
					"name": "/castings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains casting object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.casting).to.be.an('object')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "actor_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "movie_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "start_time",
									"value": "2014-12-11 23:30:34",
									"type": "text"
								},
								{
									"key": "place",
									"value": "342street",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/castings",
							"host": [
								"{{host}}"
							],
							"path": [
								"castings"
							]
						}
					},
					"response": []
				},
				{
					"name": "/castings/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/castings/11",
							"host": [
								"{{host}}"
							],
							"path": [
								"castings",
								"11"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImhSd0R4YTRiTktIQ2E4NF9MVTBnLSJ9.eyJpc3MiOiJodHRwczovL2ZzbmQtc3R1LnVzLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw2NDMyNmUwOTUyZmI3NjdmN2VhZWE2M2UiLCJhdWQiOiJjYXN0aW5nLWFnZW5jeSIsImlhdCI6MTY4Nzg5NjMwNywiZXhwIjoxNjg3OTgyNzA3LCJhenAiOiIyTnFMTGYwbzBESnJoZ1lVT2hiU1dIdHRHV1BhTTdnSSIsInNjb3BlIjoiIiwicGVybWlzc2lvbnMiOlsiYWRkOmFjdG9ycyIsImFkZDpjYXN0aW5ncyIsImFkZDptb3ZpZXMiLCJkZWxldGU6YWN0b3JzIiwiZGVsZXRlOmNhc3RpbmdzIiwiZGVsZXRlOm1vdmllcyIsImdldDphY3RvcnMiLCJnZXQ6Y2FzdGluZ3MiLCJnZXQ6bW92aWVzIiwidXBkYXRlOmFjdG9ycyIsInVwZGF0ZTpjYXN0aW5nIiwidXBkYXRlOm1vdmllcyJdfQ.WSnFlc96TsYHzXfyo2r4SJ97G6xuqdQ8mWPzav5wa259F5qCqUqqM8wkvsvBZi81B5NpFaRdGFmSrSQu4JKZOpYQoG2Iuxi08H4leH6BIqt3I0Cg3mgXuAH71UWwCheFjklT4ogdKBRRJPUI1GltelHzyRrPvLmahJ7SqSpNeOEqrL-MnY8BH4i83QAM5SMEYD2hDCWwtVmum519WWJ7N0FPsxr0LIKGd7CNyMx1izS4fgNtlINcLVwZLA15fTndDypVdFaCmylooytBuZkGGPnxsDlTBF3KiCOMWwszH2bCixRmGiGb4XZf7TDw8M426LU9GmMqdAhG0k5mboff-A",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "localhost:3000",
			"type": "string"
		}
	]
}